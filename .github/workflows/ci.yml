name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Debug

# Keeping it simple for now
jobs:
  # Linux GCC Build with Coverage
  linux-gcc:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          lcov \
          gcovr \
          clang-tidy \
          clang-format \
          libboost-all-dev \
          libpq-dev \
          postgresql-client \
          docker-compose

    - name: Build with coverage
      run: make build-coverage

    - name: Run tests
      run: make test

    - name: Generate coverage report
      run: make coverage

    - name: Upload coverage to Codecov
      if: github.ref == 'refs/heads/main'
      uses: codecov/codecov-action@v4
      with:
        files: ./build/coverage/coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  # Linux Clang Build
  linux-clang:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-18 \
          libc++-18-dev \
          libc++abi-18-dev \
          cmake \
          ninja-build \
          clang-tidy \
          clang-format \
          libboost-all-dev \
          libpq-dev \
          postgresql-client \
          docker-compose

    - name: Setup Clang environment
      run: |
        echo "CC=clang-18" >> $GITHUB_ENV
        echo "CXX=clang++-18" >> $GITHUB_ENV

    - name: Build
      run: make build

    - name: Run tests
      run: make test

  # Clang-Tidy Check
  clang-tidy:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-18 \
          clang-tidy \
          cmake \
          ninja-build \
          libboost-all-dev \
          libpq-dev \
          docker-compose

    - name: Setup Clang environment
      run: |
        echo "CC=clang-18" >> $GITHUB_ENV
        echo "CXX=clang++-18" >> $GITHUB_ENV

    - name: Build (required for clang-tidy)
      run: make build

    - name: Run clang-tidy
      run: make tidy

  # Format Check
  format-check:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Check formatting
      run: make format-check
