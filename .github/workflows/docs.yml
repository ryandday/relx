name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'include/**'
      - '.github/workflows/docs.yml'
      - 'Doxyfile'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'include/**'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Verify project structure
        run: |
          echo "=== Repository structure ==="
          find . -type f -name "*.hpp" -o -name "*.h" | head -10
          echo "=== Doxyfile exists ==="
          ls -la Doxyfile
          echo "=== Docs directory ==="
          ls -la docs/

      - name: Generate API Documentation
        run: |
          echo "Generating API documentation..."
          doxygen Doxyfile
          echo "API documentation generated successfully"

      - name: List generated API files
        run: |
          echo "=== Generated API documentation structure ==="
          find docs/api -type f | head -20

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: './docs'

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        working-directory: './docs'
        env:
          JEKYLL_ENV: production

      - name: Create combined documentation site
        run: |
          # Create a combined site with both API docs and manual docs
          mkdir -p _site
          
          # Copy Jekyll-built markdown docs to _site
          cp -r docs/_site/* _site/
          
          # Copy API documentation to _site/api
          cp -r docs/api/html/* _site/api/

          # Create an enhanced index.html that provides navigation to both
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>relx - Modern C++23 SQL Query Builder</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      line-height: 1.6;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 2rem;
                      background: #fafafa;
                      color: #333;
                  }
                  .header {
                      text-align: center;
                      margin-bottom: 3rem;
                      padding: 2rem;
                      background: white;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  .header h1 {
                      color: #2c3e50;
                      margin-bottom: 0.5rem;
                  }
                  .header p {
                      color: #7f8c8d;
                      font-size: 1.2rem;
                  }
                  .nav-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 2rem;
                      margin-bottom: 3rem;
                  }
                  .nav-card {
                      background: white;
                      padding: 2rem;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      transition: transform 0.2s;
                  }
                  .nav-card:hover {
                      transform: translateY(-2px);
                  }
                  .nav-card h3 {
                      color: #2c3e50;
                      margin-top: 0;
                  }
                  .nav-card a {
                      color: #3498db;
                      text-decoration: none;
                      font-weight: 500;
                  }
                  .nav-card a:hover {
                      text-decoration: underline;
                  }
                  .quick-links {
                      background: white;
                      padding: 2rem;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  .quick-links h3 {
                      color: #2c3e50;
                      margin-top: 0;
                  }
                  .quick-links ul {
                      list-style: none;
                      padding: 0;
                  }
                  .quick-links li {
                      margin: 0.5rem 0;
                  }
                  .quick-links a {
                      color: #3498db;
                      text-decoration: none;
                  }
                  .quick-links a:hover {
                      text-decoration: underline;
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>relx</h1>
                  <p>A Modern C++23 Type-Safe SQL Query Builder</p>
              </div>
              
              <div class="nav-grid">
                  <div class="nav-card">
                      <h3>üìö User Guide</h3>
                      <p>Learn how to use relx with comprehensive guides and tutorials.</p>
                      <p><a href="./schema-definition.html">Schema Definition</a></p>
                      <p><a href="./query-building.html">Query Building</a></p>
                      <p><a href="./result-parsing.html">Result Parsing</a></p>
                      <p><a href="./error-handling.html">Error Handling</a></p>
                  </div>
                  
                  <div class="nav-card">
                      <h3>üîç API Reference</h3>
                      <p>Complete API documentation generated from source code with examples and detailed explanations.</p>
                      <p><a href="./api/annotated.html">Browse API Documentation ‚Üí</a></p>
                  </div>
                  
                  <div class="nav-card">
                      <h3>üöÄ Examples & Advanced Topics</h3>
                      <p>Advanced examples, performance tips, and development guides.</p>
                      <p><a href="./advanced-examples.html">Advanced Examples</a></p>
                      <p><a href="./performance.html">Performance Guide</a></p>
                      <p><a href="./development.html">Development Guide</a></p>
                  </div>
              </div>
              
              <div class="quick-links">
                  <h3>Quick Links</h3>
                  <ul>
                      <li><a href="./api/classes.html">Classes</a> - All classes and structs</li>
                      <li><a href="./api/namespaces.html">Namespaces</a> - Namespace documentation</li>
                      <li><a href="./api/files.html">Files</a> - Source file documentation</li>
                      <li><a href="./api/examples.html">Examples</a> - Code examples</li>
                      <li><a href="https://github.com/ryandday/relx">GitHub Repository</a> - Source code</li>
                  </ul>
              </div>
          </body>
          </html>
          EOF
          
          echo "Combined documentation site created"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 